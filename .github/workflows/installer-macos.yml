on:
  pull_request:
  release:
    types:
      - created

name: Create macOS App Bundle and DMG

jobs:
  build:
    name: macOS App Bundle
    runs-on: macos-latest
    strategy:
      matrix:
        build_type: ['Lite', 'Full']
    defaults:
      run:
        shell: bash -l {0}
        working-directory: ./installers/macOS
    env:
      spy_repo: ${{ github.workspace }}
      spk_repo: ${{ github.workspace }}/external-deps/spyder-kernels
      pls_repo: ${{ github.workspace }}/external-deps/python-language-server
      build_type: ${{ matrix.build_type }}
      event_name: ${{ github.event_name }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: |
          # Set build type variable
          if [[ ${build_type} == "Lite" ]]; then
              echo "build lite"
              echo "::set-env name=BFLAG::'--lite'"
              echo "::set-env name=DMGNAME::'Spyder-Lite.dmg'"
          elif [[ ${build_type} == "Full" ]]; then
              echo "build full"
              echo "::set-env name=BFLAG::''"
              echo "::set-env name=DMGNAME::'Spyder.dmg'"
          fi
          # Set PR type variable
          if [[ ${event_name} == 'release' ]]; then
              echo "::set-env name=SUBREPOS::'-e ${spk_repo} -e ${pls_repo}'"
          else
              echo "::set-env name=SUBREPOS::''"
          fi
#      - name: Install Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.7.9
      - name: Install Dependencies
        run: |
          echo ${build_type}
          echo ${spy_repo}
          echo ${BFLAG}
          echo ${DMGNAME}
#          is there a better way to install only spyder dependents?
#          pip3 install -r req-build.txt -r req-extras.txt -c req-const.txt ${SUBREPOS} -e ${spy_repo}
#          pip3 uninstall -q -y spyder
#      - name: Build Application Bundle
#        run: python3 setup.py ${BFLAG} --dmg py2app
#      - name: Upload Artifact
#        uses: actions/upload-artifact@v2
#        with:
#          path: installers/macOS/dist/env.DMGNAME
#          name: env.DMGNAME
#      - name: Get Release
#        if: ${{github.event_name == 'release'}}
#        id: get_release
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
#        uses: bruceadams/get-release@v1.2.0
#      - name: Upload Release Asset
#        if: ${{github.event_name == 'release'}}
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
#        with:
#          upload_url: ${{ steps.get_release.outputs.upload_url }}
#          asset_path: installers/macOS/dist/env.DMGNAME
#          asset_name: env.DMGNAME
#          asset_content_type: application/x-apple-diskimage
