on:
  pull_request:
  release:
    types:
      - created

name: Create macOS App Bundle and DMG

jobs:
  build:
    name: macOS App Bundle
    runs-on: macos-10.15
    needs: matrix_prep
    strategy:
      matrix:
        build_type: ${{ github.event_name == 'release' && $(echo "['Full', 'Lite']") || $(echo "['Full']") }}
    defaults:
      run:
        shell: bash -l {0}
        working-directory: ${{ github.workspace }}/installers/macOS
    env:
      LITE_FLAG: ${{ matrix.build_type == 'Lite' && '--lite' || '' }}
      DMGNAME: ${{ matrix.build_type == 'Lite' && 'Spyder-Lite.dmg' || 'Spyder.dmg' }}
      DISTDIR: ${{ github.workspace }}/dist
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          # This is the last version working with py2app and modulegraph
          python-version: '3.9.5'
          architecture: 'x64'
      - name: Install Dependencies
        run: |
          INSTALL_FLAGS=()
          if [[ -z ${LITE_FLAG} ]]; then
              INSTALL_FLAGS+=('-r' 'req-scientific.txt')
          fi
          ${pythonLocation}/bin/python -m pip install -U pip setuptools wheel
          ${pythonLocation}/bin/python -m pip install -r req-build.txt -r req-extras.txt -r req-plugins.txt "${INSTALL_FLAGS[@]}" -e ${GITHUB_WORKSPACE}
      - name: Install Subrepos
        if: ${{github.event_name == 'pull_request'}}
        run: |
          for dep in $(ls ${GITHUB_WORKSPACE}/external-deps)
          do
              if [ "$dep" = "python-lsp-server" ]; then
                  SETUPTOOLS_SCM_PRETEND_VERSION=`${pythonLocation}/bin/python ${GITHUB_WORKSPACE}/pylsp_utils.py` \
                  ${pythonLocation}/bin/python -m pip install ${GITHUB_WORKSPACE}/external-deps/$dep
              else
                  ${pythonLocation}/bin/python -m pip install ${GITHUB_WORKSPACE}/external-deps/$dep
              fi
          done
      - name: Show Build Environment
        run: |
          ${pythonLocation}/bin/python -V -V
          ${pythonLocation}/bin/python -m pip list
      - name: Install Micromamba
        working-directory: ${{ github.workspace }}/spyder
        run: |
          curl -Ls https://micro.mamba.pm/api/micromamba/osx-64/latest | tar -xvj bin/micromamba
      - name: Build Application Bundle
        run: ${pythonLocation}/bin/python setup.py ${LITE_FLAG} --dist-dir ${DISTDIR}
      - name: Test Application Bundle
        if: ${{github.event_name == 'pull_request'}}
        run: ./test_app.sh -t 60 -d 10 ${DISTDIR}
      - name: Build Disk Image
        run: ${pythonLocation}/bin/python setup.py ${LITE_FLAG} --dist-dir ${DISTDIR} --dmg --no-app
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          path: ${{ env.DISTDIR }}/${{ env.DMGNAME }}
          name: ${{ env.DMGNAME }}
      - name: Get Release
        if: ${{github.event_name == 'release'}}
        id: get_release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        uses: bruceadams/get-release@v1.2.0
      - name: Upload Release Asset
        if: ${{github.event_name == 'release'}}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{ env.DISTDIR }}/${{ env.DMGNAME }}
          asset_name: ${{ env.DMGNAME }}
          asset_content_type: application/x-apple-diskimage
