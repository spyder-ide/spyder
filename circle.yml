# https://circleci.com/gh/spyder-ide/spyder

machine:
  environment:
    # Used by qthelpers to close widgets after a defined time
    TEST_CI: "True"
    # Python versions to tests (Maximum of 4 different versions)
    PY_VERSIONS: "2.7 3.4 3.5"
    # Environment variables used by astropy helpers
    TRAVIS_OS_NAME: "linux"
    CONDA_CHANNELS: "spyder-ide"
    CONDA_DEPENDENCIES: >
      jedi mock nbconvert numpy pandas pep8 psutil pyflakes pygments pylint
      pytest pytest-cov pytest-qt pyyaml qtawesome qtpy requests sphinx
    PIP_DEPENDENCIES: "coveralls"

dependencies:
  override:
    # First convert PY_VERSIONS to an array and then select the python version based on the CIRCLE_NODE_INDEX
    - export PY_VERSIONS=($PY_VERSIONS) &&
      export TRAVIS_PYTHON_VERSION=${PY_VERSIONS[$CIRCLE_NODE_INDEX]} && 
      echo -e "PYTHON = $TRAVIS_PYTHON_VERSION \n============" &&
      git clone git://github.com/astropy/ci-helpers.git &&
      source ci-helpers/travis/setup_conda_$TRAVIS_OS_NAME.sh &&
      export PATH="$HOME/miniconda/bin:$PATH" &&
      source activate test &&
      conda install ciocheck -c conda-forge -c continuumcrew &&
      python setup.py install;

test:
  override:
    # Style checks
    - export PATH="$HOME/miniconda/bin:$PATH" && source activate test && ciocheck spyder: # note the colon
        parallel: true
    # PyQt5
    - export PATH="$HOME/miniconda/bin:$PATH" && source activate test && conda install qt=5.* pyqt=5.* qtconsole && python runtests.py: # note the colon
        parallel: true
#    # PySide2
#    - export PATH="$HOME/miniconda/bin:$PATH" && source activate test && conda install qt=5.* pyside2 && python runtests.py: # note the colon
#        parallel: true
    # PyQt4
#    - export PATH="$HOME/miniconda/bin:$PATH" && source activate test && conda install qt=4.* pyqt=4.* qtconsole && python runtests.py: # note the colon
#        parallel: true
#    - export PATH="$HOME/miniconda/bin:$PATH" && source activate test && coveralls: # note the colon
#        parallel: true
