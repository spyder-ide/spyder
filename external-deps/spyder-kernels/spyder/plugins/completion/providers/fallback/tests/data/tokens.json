{
    "example.c": ["float", "foo", "include", "int", "main",
                  "printf", "pvar", "return", "stdio", "struct",
                  "var", "sizeof", "char", "switch", "continue"],
    "example.cpp": ["Consider", "Create", "Implement", "Obj", "ObjContainer",
                    "Postfix", "Prefix", "Return", "SmartPointer", "Static",
                    "Zero", "above", "access", "actual", "add", "an",
                    "bool", "call", "class", "const", "container", "cout",
                    "definitions", "do", "end", "endl", "false", "for",
                    "friend", "if", "implement", "include", "index",
                    "indicates", "int", "iostream", "iterator", "list",
                    "main", "member", "method", "namespace", "obj", "objc",
                    "oc", "of", "operator", "overload", "pointer", "public",
                    "push_back", "return", "size", "smart", "sp",
                    "standard", "static", "std", "sz", "the", "to", "true",
                    "using", "value", "vector", "version", "void", "while",
                    "enum", "virtual"],
    "example.css": ["DeepSkyBlue", "nombre-valido", "text", "css",
                    "color", "Hello", "world", "type", "style",
                    "-webkit-", "align-content", "padding-box", "border"],
    "example.erl": ["module", "example", "export", "fib", "some_function",
                    "this_function", "F1", "F2", "ok", "textString",
                    "Variable", "case", "of", "error", "spawn_process",
                    "spawn", "Pid", "example", "msg", "self", "Some",
                    "comment", "in", "Erlang", "abs", "fun", "and"],
    "example.ex": ["Module", "example", "in", "Elixir", "defmodule",
                   "Example", "do", "use", "GenServer", "def", "fact",
                   "accum", "end", "receive", "cond", "fn", "defmacro",
                   "quote", "unquote"],
    "example.html": ["DOCTYPE", "Hello", "Jamie", "World", "body",
                     "charset", "en", "h1", "head", "here", "html",
                     "lang", "meta", "title", "utf-8", "was"],
    "example.java": ["Compilation", "Execution", "Hello", "HelloWorld",
                     "Prints", "String", "System", "World", "args", "class",
                     "java", "javac", "main", "out", "println", "public",
                     "static", "terminal", "test_underscore", "the", "to",
                     "void", "window", "assert", "protected", "volatile",
                     "throws"],
    "example.md": ["Blockquote", "Bold", "Heading", "Horizontal",
                   "Image", "Inline", "Italic", "Link", "List", "One", "Rule",
                   "Three", "Two", "after", "backticks", "blank", "block",
                   "code", "com", "http", "indent", "jpg", "line", "or", "org",
                   "paragraph", "png", "print", "spaces", "under_score",
                   "url", "with"],
    "example.py": ["Apply", "Browser", "Count", "Garcia", "Juan", "Make",
                   "Manuel", "N_", "Qt", "QtWebKit", "Set", "Simple",
                   "This", "Very", "VerySimpleWebBrowser", "Web", "Z_",
                   "__file__", "and", "argwhere", "array", "as", "author",
                   "birth", "borders", "com", "def", "for", "gmail", "home",
                   "implemented", "import", "in", "int", "is", "iterate_1",
                   "iterate_2", "jmg", "neighbours", "new", "np", "null",
                   "numpy", "over", "print", "range", "ravel", "return",
                   "rules", "shape", "stay", "sure", "survive", "test",
                   "TODO", "utn", "values", "XXX", "zeros", "__del__",
                   "yield from"],
    "example.R": ["Hello", "function", "hello", "name", "sprintf"],
    "example.jl": ["println", "hello", "world", "function", "quadratic",
                   "Float64", "unlike", "other", "languages", "is",
                   "equivalent", "to", "sqr_term", "sqrt", "r1", "r2",
                   "multiple", "values", "can", "be", "returned", "from",
                   "using", "tuples", "if", "the", "return", "keyword",
                   "omitted", "last", "term", "end", "DenseArray", "macro",
                   "begin", "Any"]
}
